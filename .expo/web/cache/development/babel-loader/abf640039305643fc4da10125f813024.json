{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _elements = require(\"@react-navigation/elements\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _debounce = _interopRequireDefault(require(\"../../utils/debounce\"));\n\nvar _ModalPresentationContext = _interopRequireDefault(require(\"../../utils/ModalPresentationContext\"));\n\nvar _HeaderSegment = _interopRequireDefault(require(\"./HeaderSegment\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _default = React.memo(function Header(_ref) {\n  var back = _ref.back,\n      layout = _ref.layout,\n      progress = _ref.progress,\n      options = _ref.options,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      styleInterpolator = _ref.styleInterpolator;\n  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n  var previousTitle;\n\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  var goBack = React.useCallback((0, _debounce.default)(function () {\n    if (navigation.isFocused() && navigation.canGoBack()) {\n      navigation.dispatch(Object.assign({}, _native.StackActions.pop(), {\n        source: route.key\n      }));\n    }\n  }, 50), [navigation, route.key]);\n  var isModal = React.useContext(_ModalPresentationContext.default);\n  var isParentHeaderShown = React.useContext(_elements.HeaderShownContext);\n  var statusBarHeight = options.headerStatusBarHeight !== undefined ? options.headerStatusBarHeight : isModal || isParentHeaderShown ? 0 : insets.top;\n  return React.createElement(_HeaderSegment.default, _extends({}, options, {\n    title: (0, _elements.getHeaderTitle)(options, route.name),\n    progress: progress,\n    layout: layout,\n    modal: isModal,\n    headerBackTitle: options.headerBackTitle !== undefined ? options.headerBackTitle : previousTitle,\n    headerStatusBarHeight: statusBarHeight,\n    onGoBack: back ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});\n\nexports.default = _default;","map":{"version":3,"sources":["Header.tsx"],"names":["styleInterpolator","insets","options","previousTitle","back","goBack","debounce","navigation","StackActions","source","route","key","isModal","React","isParentHeaderShown","statusBarHeight","getHeaderTitle"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;eAEe,KAAK,CAAL,IAAA,CAAW,SAAA,MAAA,CAAA,IAAA,EAQL;EARqB,IAAA,IAAA,GAQrB,IARqB,CAAA,IAAA;EAAA,IAAA,MAAA,GAQrB,IARqB,CAAA,MAAA;EAAA,IAAA,QAAA,GAQrB,IARqB,CAAA,QAAA;EAAA,IAAA,OAAA,GAQrB,IARqB,CAAA,OAAA;EAAA,IAAA,KAAA,GAQrB,IARqB,CAAA,KAAA;EAAA,IAAA,UAAA,GAQrB,IARqB,CAAA,UAAA;EAAA,IAOxCA,iBAPwC,GAQrB,IARqB,CAOxCA,iBAPwC;EASxC,IAAMC,MAAM,GAAZ,IAAA,6CAAA,GAAA;EAEA,IAHmB,aAGnB;;EAIA,IAAIC,OAAO,CAAPA,eAAAA,KAAJ,SAAA,EAA2C;IACzCC,aAAa,GAAGD,OAAO,CAAvBC,eAAAA;EADF,CAAA,MAEO,IAAA,IAAA,EAAU;IACfA,aAAa,GAAGC,IAAI,CAApBD,KAAAA;EAViB;;EAcnB,IAAME,MAAM,GAAG,KAAK,CAAL,WAAA,CACbC,IAAAA,iBAAAA,EAAS,YAAM;IACb,IAAIC,UAAU,CAAVA,SAAAA,MAA0BA,UAAU,CAAxC,SAA8BA,EAA9B,EAAsD;MACpDA,UAAU,CAAVA,QAAAA,mBACKC,oBAAAA,CADe,GACfA,EADLD;QAEEE,MAAM,EAAEC,KAAK,CAACC;MAFhBJ;IAID;EANK,CAARD,EADa,EACbA,CADa,EASb,CAAA,UAAA,EAAaI,KAAK,CATpB,GASE,CATa,CAAf;EAYA,IAAME,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAhB,iCAAgBA,CAAhB;EACA,IAAMC,mBAAmB,GAAGD,KAAK,CAALA,UAAAA,CAA5B,4BAA4BA,CAA5B;EAEA,IAAME,eAAe,GACnBb,OAAO,CAAPA,qBAAAA,KAAAA,SAAAA,GACIA,OAAO,CADXA,qBAAAA,GAEIU,OAAO,IAAPA,mBAAAA,GAAAA,CAAAA,GAEAX,MAAM,CALZ,GAAA;EAOA,OACE,KAAA,CAAA,aAAA,CAAA,sBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAA;IAEE,KAAK,EAAEe,IAAAA,wBAAAA,EAAc,OAAdA,EAAwBN,KAAK,CAFtC,IAESM,CAFT;IAGE,QAAQ,EAHV,QAAA;IAIE,MAAM,EAJR,MAAA;IAKE,KAAK,EALP,OAAA;IAME,eAAe,EACbd,OAAO,CAAPA,eAAAA,KAAAA,SAAAA,GACIA,OAAO,CADXA,eAAAA,GAPJ,aAAA;IAWE,qBAAqB,EAXvB,eAAA;IAYE,QAAQ,EAAEE,IAAI,GAAA,MAAA,GAZhB,SAAA;IAaE,iBAAiB,EAAEJ;EAbrB,CAAA,CAAA,CADF;AA5CF,CAAe,C","sourcesContent":["import { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type { StackHeaderProps } from '../../types';\nimport debounce from '../../utils/debounce';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport HeaderSegment from './HeaderSegment';\n\nexport default React.memo(function Header({\n  back,\n  layout,\n  progress,\n  options,\n  route,\n  navigation,\n  styleInterpolator,\n}: StackHeaderProps) {\n  const insets = useSafeAreaInsets();\n\n  let previousTitle;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      if (navigation.isFocused() && navigation.canGoBack()) {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n        });\n      }\n    }, 50),\n    [navigation, route.key]\n  );\n\n  const isModal = React.useContext(ModalPresentationContext);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const statusBarHeight =\n    options.headerStatusBarHeight !== undefined\n      ? options.headerStatusBarHeight\n      : isModal || isParentHeaderShown\n      ? 0\n      : insets.top;\n\n  return (\n    <HeaderSegment\n      {...options}\n      title={getHeaderTitle(options, route.name)}\n      progress={progress}\n      layout={layout}\n      modal={isModal}\n      headerBackTitle={\n        options.headerBackTitle !== undefined\n          ? options.headerBackTitle\n          : previousTitle\n      }\n      headerStatusBarHeight={statusBarHeight}\n      onGoBack={back ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"script"}